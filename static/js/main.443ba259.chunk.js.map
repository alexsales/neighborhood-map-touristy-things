{"version":3,"sources":["assets/heart-inactive-v3.svg","components/Navigation/SideDrawer/SideDrawer.module.css","containers/Register/Register.module.css","components/UI/MapBGNoLibrary/PlacesBG/PlacesBG.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Backdrop/Backdrop.module.css","containers/Faves/Faves.module.css","containers/Auth/Auth.module.css","components/Navigation/SideDrawer/DrawerButton/DrawerButton.module.css","assets/heart-inactive-v2.svg","assets/close-24px.svg","components/Search/Search.module.css","assets/heart-active-v2.svg","store/reducers/reducer.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/DrawerButton/DrawerButton.js","axios.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/UI/Backdrop/Backdrop.js","containers/Faves/Faves.js","containers/Auth/Auth.js","containers/Register/Register.js","components/Search/Search.js","components/UI/MapBGNoLibrary/PlacesBG/PlacesBG.js","components/UI/MapBGNoLibrary/MapBGNoLibrary.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","map","mapRef","mapLoaded","mapCenter","lat","lng","mapPlaces","mapMarkers","mapTextLinks","infoWindow","searchText","searchboxClicked","showLogin","showLogout","showAuth","userId","userToken","userFirebaseData","userFaves","reducer","state","action","type","payload","target","value","updatedMapCenter","data","results","geometry","location","tmpUpdatedMapPlaces","concat","updatedMapPlaces","filter","place","index","arr","indexOf","isFav","token","email","firstName","lastName","tmpFavesArr","Object","keys","key","placeId","tmpAddToFavesArr","forEach","fave","push","updatedFavesArrDelete","item","withRouter","connect","mapReduce","dispatch","onToggleShowLogin","onShowAuth","bool","onShowLogin","onClostAuth","props","showLoginLink","useState","setState","forceUpdate","window","hash","includes","onClick","to","pathname","buttonName","className","classes","Toolbar","faves","src","fav","alt","places","namesArr","name","linksList","nameArrIndex","whichHeartImg","heartActive","e","heartClick","document","getElementsByClassName","heartInactiveV3","heartInactive","splice","click","DrawerButton","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseSDK","initializeApp","firebase","instanceGeocode","axios","create","baseURL","instanceFirebase","instanceGToolkitSignIn","infowin","onUpdateInfoWindow","iw","onUpdatePlaceItem","onAddToFaves","userData","onDeleteFromFaves","idToDelete","infowindowActive","onHeartClick","preventDefault","stopPropagation","patch","localStorage","getItem","place_id","address","vicinity","then","resp","delete","SideDrawer","marker","google","maps","Marker","position","title","close","infowindow","basicInfo","image","photos","getUrl","setContent","infoWin","iwPlaceName","iwHeart","open","iwListener","addListener","event","removeListener","imagesNode","querySelectorAll","img","style","width","addEventListener","buttonsNode","btn","right","imgContainersNode","cnt","overflow","overflowY","iwContainersNode","iwCnt","padding","height","boxSizing","Layout","children","Backdrop","show","closeModal","closeBtn","userFavesArr","Faves","favesList","history","onShowLogout","onFirebaseAuthenticate","onClearUserToken","auth","signOut","onLoadUserData","onLoadUserFaves","userFavs","removeItem","setEmail","password","setPassword","submitHandler","loginLogoutStr","post","returnSecureToken","tokenExpiresInDate","Date","getTime","expiresIn","setItem","idToken","localId","get","tmpJSONFaves","catch","err","console","log","formContents","testLoginInfo","id","placeholder","required","onChange","Auth","Register","notRegistered","regDisabled","center","searchClicked","onSetCenter","onSearchClicked","onCheckEntered","evt","cntr","queryParams","response","error","Search","onKeyPress","useEffect","mapIcon","url","size","Size","scaledSize","icon","PlacesBG","this","onMapLoaded","placeLocation","LatLng","request","radius","PlacesService","nearbySearch","otherProps","ref","useRef","onLoad","Map","current","zoom","InfoWindow","maxWidth","onMount","script","createElement","headScript","getElementsByTagName","parentNode","insertBefore","removeEventListener","currentUser","routes","path","component","exact","render","Boolean","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.443ba259.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart-inactive-v3.0e0abb7f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"infoWin\":\"SideDrawer_infoWin__37ouY\",\"iwPlaceName\":\"SideDrawer_iwPlaceName__2Jb7O\",\"iwHeart\":\"SideDrawer_iwHeart__2r6fW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Register\":\"Register_Register__2kt4i\",\"notRegistered\":\"Register_notRegistered__AgUJL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlacesBG\":\"PlacesBG_PlacesBG__1hTJ3\",\"iwPlaceName\":\"PlacesBG_iwPlaceName__1gJop\",\"iwHeart\":\"PlacesBG_iwHeart__1-sCM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"faves\":\"Toolbar_faves__2nh5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\",\"closeBtn\":\"Backdrop_closeBtn__g47Hu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Faves\":\"Faves_Faves__1Pbd-\",\"favesList\":\"Faves_favesList__1sZTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\",\"testLoginInfo\":\"Auth_testLoginInfo__3Oy7e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerButton\":\"DrawerButton_DrawerButton__OU7KX\"};","module.exports = __webpack_public_path__ + \"static/media/heart-inactive-v2.0e1f1f09.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-24px.777b93c6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2SQmI\",\"touched\":\"Search_touched__3LI-p\"};","module.exports = __webpack_public_path__ + \"static/media/heart-active-v2.be2c63a1.svg\";","const initialState = {\n  map: null,\n  mapRef: null,\n  mapLoaded: false,\n  mapCenter: {\n    lat: 34.1020231,\n    lng: -118.3409712\n  },\n  mapPlaces: [],\n  mapMarkers: [],\n  mapTextLinks: [],\n  infoWindow: null,\n  searchText: \"e.g. '90004' or 'Los Angeles, CA'\",\n  searchboxClicked: false,\n  showLogin: true,\n  showLogout: false,\n  showAuth: false,\n  userId: '',\n  userToken: null,\n  userFirebaseData: null,\n  userFaves: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SETCENTER':\n      return {\n        ...state,\n        searchText: action.payload.target.value\n      };\n    case 'SEARCHCLICKED':\n      return {\n        ...state,\n        searchText: '',\n        searchboxClicked: true\n      };\n    case 'UPDATEMAP':\n      const updatedMapCenter = {\n        lat: action.payload.data.results[0].geometry.location.lat,\n        lng: action.payload.data.results[0].geometry.location.lng\n      };\n      return {\n        ...state,\n        mapPlaces: [],\n        mapCenter: {\n          ...state.mapCenter,\n          ...updatedMapCenter\n        }\n      };\n    case 'MAPLOADED':\n      return {\n        ...state,\n        map: action.payload.map,\n        mapRef: action.payload.mapRef\n      };\n    case 'PLACESLOADED':\n      const tmpUpdatedMapPlaces = [...state.mapPlaces].concat(action.payload);\n\n      // remove duplicates\n      const updatedMapPlaces = tmpUpdatedMapPlaces\n        .filter((place, index, arr) => {\n          return place !== null;\n        })\n        .filter((place, index) => tmpUpdatedMapPlaces.indexOf(place) === index);\n\n      return {\n        ...state,\n        mapPlaces: updatedMapPlaces\n      };\n    case 'UPDATEINFOWINDOW':\n      return {\n        ...state,\n        infoWindow: action.payload\n      };\n    case 'UPDATEPLACEITEM':\n      // set isFav property on place item\n      state.mapPlaces[action.payload[0]].isFav = action.payload[1];\n      return {\n        ...state,\n        // spread mapPlaces to copy all place items\n        // isolate and update single place item\n        mapPlaces: [...state.mapPlaces, state.mapPlaces[action.payload[0]]]\n      };\n    case 'SHOWAUTH':\n      return {\n        ...state,\n        showAuth: action.payload\n      };\n    case 'SHOWLOGIN':\n      return {\n        ...state,\n        showLogin: action.payload\n      };\n    case 'SHOWLOGOUT':\n      return {\n        ...state,\n        showLogout: action.payload\n      };\n    case 'FIREBASEAUTHENTICATE':\n      return {\n        ...state,\n        userId: action.userId,\n        userToken: action.token\n      };\n    case 'CLEARUSERTOKEN':\n      return {\n        ...state,\n        mapPlaces: [],\n        userId: '',\n        userToken: null,\n        showLogin: true,\n        showLogout: false,\n        showAuth: false,\n        userFirebaseData: null,\n        userFaves: []\n      };\n    case 'LOADUSERDATA':\n      const email = action.payload.email;\n      const firstName = action.payload['first-name'];\n      const lastName = action.payload['last-name'];\n\n      return {\n        ...state,\n        userFirebaseData: { email, firstName, lastName }\n      };\n    case 'LOADUSERFAVES':\n      let tmpFavesArr = null;\n\n      if (action.payload['faves-list']) {\n        tmpFavesArr = Object.keys(action.payload['faves-list']).map(\n          (key, index) => {\n            return action.payload['faves-list'][key];\n          }\n        );\n      }\n      return {\n        ...state,\n        userFaves: tmpFavesArr\n      };\n    case 'ADDTOFAVES':\n      const placeId = action.payload.placeId;\n\n      let tmpAddToFavesArr = [];\n      state.userFaves.forEach((fave, index) => {\n        if (fave.placeId !== placeId) {\n          tmpAddToFavesArr.push(fave);\n        }\n      });\n\n      return {\n        ...state,\n        userFaves: [...tmpAddToFavesArr, action.payload]\n      };\n    case 'DELETEFROMFAVES':\n      const updatedFavesArrDelete = state.userFaves.filter((item, index) => {\n        return state.userFaves[index].placeId !== action.payload;\n      });\n\n      return {\n        ...state,\n        userFaves: updatedFavesArrDelete\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { Fragment, useState } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classes from './Toolbar.module.css';\nimport fav from '../../../assets/heart-active-v2.svg';\n\nconst Toolbar = props => {\n  let showLoginLink = null;\n  const [, setState] = useState();\n\n  const forceUpdate = () => {\n    setState({});\n  };\n\n  const onShowLoginLink = () => {\n    return !window.location.hash.includes('auth') ? (\n      <li onClick={forceUpdate}>\n        {props.showLogin ? (\n          <NavLink\n            to={{\n              pathname: '/auth',\n              showLogin: props.showLogin,\n              showAuth: props.showAuth,\n              buttonName: 'login'\n            }}>\n            Login\n          </NavLink>\n        ) : (\n          <NavLink\n            to={{\n              pathname: '/auth',\n              showLogin: props.showLogin,\n              showAuth: props.showAuth,\n              buttonName: 'logout'\n            }}>\n            Logout\n          </NavLink>\n        )}\n      </li>\n    ) : (\n      ''\n    );\n  };\n\n  showLoginLink = onShowLoginLink();\n\n  return (\n    <Fragment>\n      <ul className={classes.Toolbar}>\n        <li className={classes.faves}>\n          <NavLink to='/faves'>\n            <img src={fav} alt='favorites link' />\n          </NavLink>\n        </li>\n        {showLoginLink}\n        <li>\n          <NavLink to='/register'>Register</NavLink>\n        </li>\n      </ul>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    showLogin: state.mapReduce.showLogin,\n    showLogout: state.mapReduce.showLogout\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleShowLogin: () => {},\n    onShowAuth: bool => {\n      dispatch({\n        type: 'SHOWAUTH',\n        payload: bool\n      });\n    },\n    onShowLogin: bool => {\n      dispatch({\n        type: 'SHOWLOGIN',\n        payload: bool\n      });\n    },\n    onClostAuth: () => {\n      dispatch({\n        type: 'CLOSEAUTH'\n      });\n    }\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Toolbar)\n);\n","import React from 'react';\nimport classes from './DrawerButton.module.css';\nimport { connect } from 'react-redux';\nimport heartInactive from '../../../../assets/heart-inactive-v2.svg';\nimport heartInactiveV3 from '../../../../assets/heart-inactive-v3.svg';\nimport heartActive from '../../../../assets/heart-active-v2.svg';\n\nconst DrawerButton = props => {\n  const namesArr = props.places\n    .filter((place, index, arr) => {\n      return place !== null;\n    })\n    .map(place => {\n      return place.name;\n    })\n    .filter((item, index, arr) => arr.indexOf(item) === index);\n\n  const linksList = props.places.map((place, index) => {\n    if (place !== null && namesArr.indexOf(place.name) >= 0) {\n      const nameArrIndex = namesArr.indexOf(place.name);\n      const whichHeartImg = place.isFav ? (\n        <img\n          src={heartActive}\n          alt={`is a favorite: ${place.isFav}`}\n          onClick={e => {\n            props.heartClick(e, place, index);\n            if (!!document.getElementsByClassName('heart-img2')[0] === true) {\n              document.getElementsByClassName('heart-img2')[0].src = place.isFav\n                ? heartActive\n                : heartInactiveV3;\n            }\n            if (!!document.getElementsByClassName('heart-img')[0] === true) {\n              document.getElementsByClassName('heart-img')[0].src = place.isFav\n                ? heartActive\n                : heartInactiveV3;\n            }\n          }}\n        />\n      ) : (\n        <img\n          src={heartInactive}\n          alt={`is a favorite: ${place.isFav}`}\n          onClick={e => {\n            props.heartClick(e, place, index);\n            if (!!document.getElementsByClassName('heart-img2')[0] === true) {\n              document.getElementsByClassName('heart-img2')[0].src = place.isFav\n                ? heartActive\n                : heartInactiveV3;\n            }\n            if (!!document.getElementsByClassName('heart-img')[0] === true) {\n              document.getElementsByClassName('heart-img')[0].src = place.isFav\n                ? heartActive\n                : heartInactiveV3;\n            }\n          }}\n        />\n      );\n\n      // place.isFav = Math.random() < 0.5 ? true : false;\n      namesArr.splice(nameArrIndex, 1);\n\n      return (\n        <li key={index} onClick={e => props.click(e, place, index)}>\n          {place.name}\n          {whichHeartImg}\n        </li>\n      );\n    }\n    return false;\n  });\n\n  return <ul className={classes.DrawerButton}>{linksList}</ul>;\n};\n\nconst mapStateToProps = state => {\n  return {\n    places: state.mapReduce.mapPlaces\n  };\n};\n\nexport default connect(mapStateToProps)(DrawerButton);\n","import axios from 'axios';\nimport firebaseSDK from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: `${process.env.REACT_APP_FIREBASE_API_KEY}`,\n  authDomain: `${process.env.REACT_APP_FIREBASE_PROJ_ID}.firebaseapp.com`,\n  databaseURL: `https://${process.env.REACT_APP_FIREBASE_PROJ_ID}.firebaseio.com`,\n  projectId: `${process.env.REACT_APP_FIREBASE_PROJ_ID}`,\n  storageBucket: `${process.env.REACT_APP_FIREBASE_PROJ_ID}.appspot.com`,\n  messagingSenderId: '135767068485',\n  appId: '1:135767068485:web:b91617e71e563c02c9f82c'\n};\nfirebaseSDK.initializeApp(firebaseConfig);\n\nexport const firebase = firebaseSDK;\nexport const instanceGeocode = axios.create({\n  baseURL: 'https://maps.googleapis.com/maps/api'\n});\nexport const instanceFirebase = axios.create({\n  baseURL: `https://${process.env.REACT_APP_FIREBASE_PROJ_ID}.firebaseio.com`\n});\nexport const instanceGToolkitSignIn = axios.create({\n  baseURL: `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${process.env.REACT_APP_FIREBASE_API_KEY}`\n});\nexport const exchangeTokenForId = axios.create({\n  baseURL: `https://identitytoolkit.googleapis.com/v1/accounts:signInWithCustomToken?key=${process.env.REACT_APP_FIREBASE_API_KEY}`\n});\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport DrawerButton from './DrawerButton/DrawerButton';\nimport { instanceFirebase } from '../../../axios';\nimport classes from './SideDrawer.module.css';\nimport heartInactiveV3 from '../../../assets/heart-inactive-v3.svg';\nimport heartActive from '../../../assets/heart-active-v2.svg';\n\nconst SideDrawer = props => {\n  let infowindowActive = null;\n  const onNameClickHandler = (e, place, index) => {\n    const map = props.map;\n    const marker = new window.google.maps.Marker({\n      position: {\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      },\n      // icon: mapIcon,\n      // icon: {\n      //   size: new window.google.maps.Size(20, 20)\n      // },\n      map: props.map,\n      title: place.name\n    });\n\n    if (infowindowActive) {\n      infowindowActive.close();\n    }\n\n    if (props.infowin) {\n      props.infowin.close();\n    }\n\n    const infowindow = props.infowin;\n    const basicInfo = {\n      name: place.name,\n      image: place.photos ? place.photos[0].getUrl() : null\n    };\n\n    const whichHeartImg = place.isFav ? heartActive : heartInactiveV3;\n\n    infowindow.setContent(\n      `<div class=${classes.infoWin}>\n        <div>\n          <div class=${classes.iwPlaceName}>${basicInfo.name}</div>\n          <div class=\"${classes.iwHeart}\">\n            <img src=\"${whichHeartImg}\" class=\"heart-img2\">\n          </div>\n        </div>` +\n        (basicInfo.image !== null ? `<img src=\"${basicInfo.image}\">` : '') +\n        `</div>`\n    );\n\n    infowindow.open(map, marker);\n    infowindowActive = infowindow;\n    const iwListener = infowindow.addListener(\n      'domready',\n      function() {\n        window.google.maps.event.removeListener(iwListener);\n\n        const imagesNode = document.querySelectorAll('.gm-style-iw img');\n        const imagesArr = [...imagesNode];\n        imagesArr.forEach(img => {\n          img.style.width = '100%';\n        });\n\n        document\n          .getElementsByClassName('heart-img2')[0]\n          .addEventListener('click', e => {\n            e.preventDefault();\n            e.stopPropagation();\n            onHeartClick(e, place, index);\n            e.target.src = place.isFav ? heartActive : heartInactiveV3;\n          });\n\n        const buttonsNode = document.querySelectorAll(\n          '.gm-style-iw button[title=Close]'\n        );\n        const buttonsArr = [...buttonsNode];\n        buttonsArr.forEach(btn => {\n          // btn.style.display = 'none';\n          btn.style.right = '1px';\n        });\n\n        const imgContainersNode = document.querySelectorAll('.gm-style-iw-d');\n        const imgContainersArr = [...imgContainersNode];\n        imgContainersArr.forEach(cnt => {\n          cnt.style.overflow = 'unset';\n          cnt.style.overflowY = 'hidden';\n        });\n\n        const iwContainersNode = document.querySelectorAll('.gm-style-iw-c');\n        const iwContainersArr = [...iwContainersNode];\n        iwContainersArr.forEach(iwCnt => {\n          iwCnt.style.padding = '12px';\n          iwCnt.style.height = 'auto';\n          iwCnt.style.boxSizing = 'content-box';\n        });\n      },\n      this\n    );\n  };\n\n  const onHeartClick = (e, place, index) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    place.isFav = !place.isFav;\n\n    if (place.isFav === true) {\n      // add to Faves in database using id, then update store's mapPlaces\n      instanceFirebase\n        .patch(\n          '/users/' +\n            localStorage.getItem('userId') +\n            `/faves-list/${place.place_id}.json`,\n          {\n            name: place.name,\n            address: place.vicinity,\n            placeId: place.place_id\n          }\n        )\n        .then(resp => {\n          props.onAddToFaves(resp.data);\n        });\n    }\n\n    if (place.isFav === false) {\n      // delete from Faves in database using id, then update store's mapPlaces\n      const idToDelete = place.place_id;\n      instanceFirebase\n        .delete(\n          '/users/' +\n            localStorage.getItem('userId') +\n            `/faves-list/${place.place_id}.json`\n        )\n        .then(resp => {\n          props.onDeleteFromFaves(idToDelete);\n        });\n    }\n\n    props.onUpdatePlaceItem(index, place.isFav);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.SideDrawer}>\n        <DrawerButton\n          mapPlaces={props.places}\n          click={onNameClickHandler}\n          heartClick={onHeartClick}\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    map: state.mapReduce.map,\n    places: state.mapReduce.mapPlaces,\n    infowin: state.mapReduce.infoWindow\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateInfoWindow: iw => {\n      dispatch({\n        type: 'UPDATEINFOWINDOW',\n        payload: iw\n      });\n    },\n    onUpdatePlaceItem: (index, isFav) => {\n      dispatch({\n        type: 'UPDATEPLACEITEM',\n        payload: [index, isFav]\n      });\n    },\n    onAddToFaves: userData => {\n      dispatch({\n        type: 'ADDTOFAVES',\n        payload: userData\n      });\n    },\n    onDeleteFromFaves: idToDelete => {\n      dispatch({\n        type: 'DELETEFROMFAVES',\n        payload: idToDelete\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideDrawer);\n","import React, { Fragment } from 'react';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nconst Layout = props => {\n  return (\n    <Fragment>\n      <Toolbar />\n      <SideDrawer />\n      {props.children}\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Backdrop.module.css';\nimport closeBtn from '../../../assets/close-24px.svg';\n\nconst Backdrop = props => {\n  return props.show ? (\n    <div className={classes.Backdrop} onClick={props.closeModal}>\n      <NavLink to='/' className={classes.closeBtn}>\n        <img src={closeBtn} alt='close modal button' />\n      </NavLink>\n    </div>\n  ) : null;\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport Backdrop from '../../components/UI/Backdrop/Backdrop';\nimport { connect } from 'react-redux';\nimport { instanceFirebase } from '../../axios';\nimport classes from './Faves.module.css';\n\nconst Faves = props => {\n  const userFavesArr = props.faves.map((fave, index) => {\n    return (\n      <li\n        key={index}\n        onClick={() => {\n          const idToDelete = fave.placeId;\n          instanceFirebase\n            .delete(\n              '/users/' +\n                localStorage.getItem('userId') +\n                `/faves-list/${idToDelete}.json`\n            )\n            .then(resp => {\n              props.onDeleteFromFaves(idToDelete);\n            });\n        }}>\n        <div>{props.faves[index].name}</div>\n        <div>{props.faves[index].address}</div>\n      </li>\n    );\n  });\n\n  return (\n    <div className={classes.Faves}>\n      <div className={classes.favesList}>\n        <h2>Faves</h2>\n        {props.userToken === null ? (\n          <>\n            <button\n              onClick={() => {\n                props.history.push('/auth');\n              }}>\n              LOGIN\n            </button>{' '}\n            <span>to load/save your favorites</span>\n          </>\n        ) : null}\n        <ul>{userFavesArr}</ul>\n      </div>\n      <Backdrop show={true} />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.mapReduce.userFirebaseData,\n    faves: state.mapReduce.userFaves,\n    userToken: state.mapReduce.userToken\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDeleteFromFaves: idToDelete => {\n      dispatch({\n        type: 'DELETEFROMFAVES',\n        payload: idToDelete\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Faves);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  firebase,\n  instanceFirebase,\n  instanceGToolkitSignIn\n} from '../../axios';\nimport Backdrop from '../../components/UI/Backdrop/Backdrop';\nimport classes from './Auth.module.css';\n\nconst Auth = props => {\n  if (props.location.buttonName === 'logout') {\n    props.onShowAuth(false);\n    props.onShowLogin(true);\n    props.onShowLogout(false);\n\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiresInDate');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('email');\n    props.onClearUserToken();\n    props.history.push('/');\n  }\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const clickCloseModal = () => {\n    props.onShowAuth(false);\n    if (!!localStorage.getItem('token') === true) {\n      props.onShowLogin(false);\n      props.onShowLogout(true);\n    } else {\n      props.onShowLogin(true);\n      props.onShowLogout(false);\n    }\n  };\n\n  const submitHandler = (e, loginLogoutStr) => {\n    e.preventDefault();\n\n    if (loginLogoutStr === 'login') {\n      instanceGToolkitSignIn\n        .post('', { email: email, password: password, returnSecureToken: true })\n        .then(resp => {\n          const tokenExpiresInDate = new Date(\n            new Date().getTime() + resp.data.expiresIn * 1000\n          );\n          // save token into localStorage\n          localStorage.setItem('token', resp.data.idToken);\n          localStorage.setItem('expiresInDate', tokenExpiresInDate);\n          localStorage.setItem('userId', resp.data.localId);\n          localStorage.setItem('email', resp.data.email);\n          props.onFirebaseAuthenticate(resp.data.idToken, resp.data.localId);\n          props.onShowLogin(false);\n          props.onShowLogout(true);\n          props.history.push('/');\n          // return resp;\n        })\n        .then(() => {\n          return instanceFirebase.get(\n            '/users/' + localStorage.getItem('userId') + '.json'\n          );\n        })\n        .then(resp => {\n          // add to Faves in database using id, then update store's mapPlaces\n          props.onLoadUserData(resp.data);\n          let tmpFavesArr = null;\n          let tmpJSONFaves = {};\n\n          if (resp.data['faves-list']) {\n            tmpFavesArr = Object.keys(resp.data['faves-list'])\n              .map((key, index) => {\n                return resp.data['faves-list'][key];\n              })\n              .concat([...props.faves]);\n\n            tmpFavesArr.filter(\n              (fave, index) => tmpFavesArr.indexOf(fave) === index\n            );\n          } else {\n            tmpFavesArr = [...props.faves];\n          }\n\n          tmpFavesArr.forEach((fave, index, arr) => {\n            const placeId = fave['placeId'];\n            tmpJSONFaves[placeId] = fave;\n          });\n\n          return instanceFirebase.patch(\n            '/users/' + localStorage.getItem('userId') + '.json',\n            {\n              'faves-list': tmpJSONFaves\n            }\n          );\n        })\n        .then(resp => {\n          props.onLoadUserFaves(resp.data);\n        })\n        .catch(err => {\n          // TODO: handle error\n          console.log(err);\n        });\n    }\n\n    if (loginLogoutStr === 'logout') {\n      localStorage.removeItem('token');\n      localStorage.removeItem('expiresInDate');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n      props.onClearUserToken();\n      props.onShowLogin(true);\n      props.onShowLogout(false);\n      props.history.push('/');\n    }\n  };\n\n  let formContents = (\n    <>\n      <h2>Login</h2>\n      <p className={classes.testLoginInfo}>\n        <span>test login:</span>\n        <span>asales2005@gmail.com</span>\n        <span>abc123</span>\n      </p>\n      <div>\n        <label>\n          <input\n            type='text'\n            id='email'\n            name='email'\n            placeholder='Email'\n            value={email}\n            required\n            onChange={e => {\n              setEmail(e.target.value);\n            }}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          <input\n            type='password'\n            id='password'\n            name='password'\n            placeholder='Password'\n            value={password}\n            required\n            onChange={e => {\n              setPassword(e.target.value);\n            }}\n          />\n        </label>\n      </div>\n      <button type='submit' onClick={e => submitHandler(e, 'login')}>\n        Submit\n      </button>\n    </>\n  );\n\n  if (!!localStorage.getItem('token') === true) {\n    props.onShowLogout(true);\n    formContents = (\n      <>\n        <div>\n          <h2>\n            Already logged in with {localStorage.getItem('email')}. Need to\n            login as a different user? Logout out first:\n          </h2>\n        </div>\n        <button type='submit' onClick={e => submitHandler(e, 'logout')}>\n          Logout\n        </button>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <form className={classes.Auth}>{formContents}</form>\n      <Backdrop show={true} closeModal={clickCloseModal} />{' '}\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    faves: state.mapReduce.userFaves\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onShowAuth: bool => {\n      dispatch({\n        type: 'SHOWAUTH',\n        payload: bool\n      });\n    },\n    onShowLogin: bool => {\n      dispatch({\n        type: 'SHOWLOGIN',\n        payload: bool\n      });\n    },\n    onShowLogout: bool => {\n      dispatch({\n        type: 'SHOWLOGOUT',\n        payload: bool\n      });\n    },\n    onFirebaseAuthenticate: (token, userId) => {\n      dispatch({\n        type: 'FIREBASEAUTHENTICATE',\n        payload: { token, userId }\n      });\n    },\n    onClearUserToken: () => {\n      firebase.auth().signOut();\n      dispatch({\n        type: 'CLEARUSERTOKEN'\n      });\n    },\n    onLoadUserData: userData => {\n      dispatch({\n        type: 'LOADUSERDATA',\n        payload: userData\n      });\n    },\n    onLoadUserFaves: userFavs => {\n      dispatch({\n        type: 'LOADUSERFAVES',\n        payload: userFavs\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React from 'react';\nimport Backdrop from '../../components/UI/Backdrop/Backdrop';\nimport classes from './Register.module.css';\n\nconst Register = props => {\n  return (\n    <div>\n      <div className={classes.Register}>\n        <div className={classes.notRegistered}>\n          <h2>Register</h2>\n          <p className={classes.regDisabled}>\n            <span>registration disabled</span>\n          </p>\n          <div>\n            <button\n              onClick={e => {\n                // props.history.push('/auth');\n                e.preventDefault();\n                e.stopPropagation();\n              }}>\n              REGISTER\n            </button>{' '}\n          </div>\n        </div>\n        <Backdrop show={true} />\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { instanceGeocode } from '../../axios';\nimport classes from './Search.module.css';\n\nconst Search = props => {\n  return (\n    <div className={classes.Search}>\n      {/* <Backdrop /> */}\n      <input\n        type='text'\n        onChange={props.onSetCenter}\n        onKeyPress={event => props.onCheckEntered(event, props.center)}\n        onClick={() => {\n          if (!props.searchClicked) {\n            props.onSearchClicked();\n          }\n        }}\n        value={props.center}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    center: state.mapReduce.searchText,\n    searchClicked: state.mapReduce.searchboxClicked\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetCenter: event => {\n      dispatch({\n        type: 'SETCENTER',\n        payload: event\n      });\n    },\n    onSearchClicked: event => {\n      dispatch({\n        type: 'SEARCHCLICKED'\n      });\n    },\n    onCheckEntered: (evt, cntr) => {\n      if (evt.key === 'Enter' || evt.key === 'ENTER') {\n        // use axios to get lat/lng of searchText, then pass as payload\n        const queryParams =\n          '/geocode/json?address=' +\n          cntr +\n          '&key=AIzaSyBSqWAWnXdkeCMI9gUZihf5WLVWQz-3UMA';\n\n        instanceGeocode\n          .get(queryParams)\n          .then(response => {\n            dispatch({\n              type: 'UPDATEMAP',\n              payload: response\n            });\n          })\n          .catch(error => {\n            dispatch({\n              type: 'UPDATEMAPFAILED'\n            });\n          });\n      }\n    }\n    // onMapLoaded: (map, mapRef) => {\n    //   dispatch({\n    //     type: 'MAPLOADED',\n    //     payload: { map, mapRef }\n    //   });\n\n    //   const businessTypes = ['art_gallery', 'book_store', 'cafe', 'museum'];\n    //   const placeLocation = new window.google.maps.LatLng({\n    //     lat: 34.1020231,\n    //     lng: -118.3409712\n    //   });\n\n    //   businessTypes.forEach(type => {\n    //     let request = {\n    //       location: placeLocation,\n    //       radius: '500',\n    //       type: ''\n    //     };\n\n    //     request.type = type;\n\n    //     (function(_type) {\n    //       new window.google.maps.places.PlacesService(map).nearbySearch(\n    //         request,\n    //         results => {\n    //           dispatch({\n    //             type: 'PLACESLOADED',\n    //             payload: results\n    //           });\n    //         }\n    //       );\n    //     })(request.type);\n    //   });\n    // }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport heartInactive from '../../../../assets/heart-inactive-v3.svg';\nimport heartActive from '../../../../assets/heart-active-v2.svg';\nimport classes from './PlacesBG.module.css';\n\nconst PlacesBG = props => {\n  let infowindowActive = null;\n  const onLoad = () => {\n    props.places.forEach((place, index) => {\n      if (place !== null) {\n        const mapIcon = {\n          url:\n            'https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi2_hdpi.png',\n          size: new window.google.maps.Size(23, 36.8),\n          scaledSize: new window.google.maps.Size(23, 36.8)\n        };\n\n        const marker = new window.google.maps.Marker({\n          position: {\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng()\n          },\n          icon: mapIcon,\n          map: props.map,\n          title: place.name\n        });\n\n        // add listener and infoWindow\n        window.google.maps.event.addListener(marker, 'click', function() {\n          // close all existing windows\n          if (infowindowActive) {\n            infowindowActive.close();\n          }\n\n          if (props.infowin) {\n            props.infowin.close();\n          }\n\n          const whichHeartImg = place.isFav ? heartActive : heartInactive;\n\n          const infowindow = props.infowin;\n          const basicInfo = {\n            name: place.name,\n            image: place.photos ? place.photos[0].getUrl() : null\n          };\n\n          infowindow.setContent(\n            `<div class=${classes.PlacesBG}>\n              <div>\n                <div class=${classes.iwPlaceName}>${basicInfo.name}</div>\n                <div class=\"${classes.iwHeart}\">\n                  <img src=\"${whichHeartImg}\" class=\"heart-img\">\n                </div>\n              </div>` +\n              (basicInfo.image !== null\n                ? `<div class=\"iw-place-img\"><img src=\"${basicInfo.image}\"></div>`\n                : '') +\n              `</div>`\n          );\n          infowindow.open(props.map, marker);\n          infowindowActive = infowindow;\n          const iwListener = infowindow.addListener(\n            'domready',\n            function() {\n              window.google.maps.event.removeListener(iwListener);\n              const imagesNode = document.querySelectorAll('.gm-style-iw img');\n              const imagesArr = [...imagesNode];\n\n              imagesArr.forEach(img => {\n                img.style.width = '100%';\n              });\n\n              document\n                .getElementsByClassName('heart-img')[0]\n                .addEventListener('click', e => {\n                  props.heartClick(e, place, index);\n                  e.target.src = place.isFav ? heartActive : heartInactive;\n                });\n\n              const buttonsNode = document.querySelectorAll(\n                '.gm-style-iw button[title=Close]'\n              );\n              const buttonsArr = [...buttonsNode];\n              buttonsArr.forEach(btn => {\n                // btn.style.display = 'none';\n                btn.style.right = '1px';\n              });\n\n              const imgContainersNode = document.querySelectorAll(\n                '.gm-style-iw-d'\n              );\n              const imgContainersArr = [...imgContainersNode];\n              imgContainersArr.forEach(cnt => {\n                cnt.style.overflow = 'unset';\n                cnt.style.overflowY = 'hidden';\n              });\n\n              const iwContainersNode = document.querySelectorAll(\n                '.gm-style-iw-c'\n              );\n              const iwContainersArr = [...iwContainersNode];\n              iwContainersArr.forEach(iwCnt => {\n                iwCnt.style.padding = '12px';\n                iwCnt.style.height = 'auto';\n                iwCnt.style.boxSizing = 'content-box';\n              });\n            },\n            this\n          );\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    onLoad();\n  });\n\n  return <p>Some places.</p>;\n};\n\nconst mapStateToProps = state => {\n  return {\n    map: state.mapReduce.map,\n    places: state.mapReduce.mapPlaces,\n    infowin: state.mapReduce.infoWindow\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateInfoWindow: iw => {\n      dispatch({\n        type: 'UPDATEINFOWINDOW',\n        payload: iw\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlacesBG);\n","import React, { Fragment, useEffect, useRef } from 'react';\nimport Places from './PlacesBG/PlacesBG';\nimport { connect } from 'react-redux';\nimport { instanceFirebase } from '../../../axios';\n\nconst MapBGNoLibrary = props => {\n  const otherProps = { ref: useRef(), className: props.className };\n  const onHeartFavToggle = (e, place, index) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    place.isFav = !place.isFav;\n\n    if (place.isFav === true) {\n      // add to Faves in database using id, then update store's mapPlaces\n      instanceFirebase\n        .patch(\n          '/users/' +\n            localStorage.getItem('userId') +\n            `/faves-list/${place.place_id}.json`,\n          {\n            name: place.name,\n            address: place.vicinity,\n            placeId: place.place_id\n          }\n        )\n        .then(resp => {\n          props.onAddToFaves(resp.data);\n        });\n    }\n\n    if (place.isFav === false) {\n      // delete from Faves in database using id, then update store's mapPlaces\n      const idToDelete = place.place_id;\n      instanceFirebase\n        .delete(\n          '/users/' +\n            localStorage.getItem('userId') +\n            `/faves-list/${place.place_id}.json`\n        )\n        .then(resp => {\n          props.onDeleteFromFaves(idToDelete);\n        });\n    }\n\n    props.onUpdatePlaceItem(index, place.isFav);\n  };\n  const onLoad = () => {\n    const map = new window.google.maps.Map(otherProps.ref.current, {\n      center: props.center,\n      zoom: 17\n    });\n    const infowindow = new window.google.maps.InfoWindow({\n      maxWidth: 300\n    });\n\n    props.onMount && props.onMount(map);\n    props.onMapLoaded(map, otherProps.ref, props.center);\n    props.onUpdateInfoWindow(infowindow);\n  };\n\n  useEffect(() => {\n    if (!window.google) {\n      const script = document.createElement(`script`);\n      script.type = `text/javascript`;\n      script.src = `https://maps.google.com/maps/api/js?key=${process.env.REACT_APP_GMAPS_API_KEY}&libraries=places`;\n      const headScript = document.getElementsByTagName(`script`)[0];\n      headScript.parentNode.insertBefore(script, headScript);\n      script.addEventListener(`load`, onLoad);\n      return () => script.removeEventListener(`load`, onLoad);\n    } else onLoad();\n  });\n\n  return (\n    <Fragment>\n      <div {...otherProps} style={{ height: `calc(100vh - 60px)` }} />\n      <Places heartClick={onHeartFavToggle} />\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    center: state.mapReduce.mapCenter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onMapLoaded: (map, mapRef, mapCenter) => {\n      dispatch({\n        type: 'MAPLOADED',\n        payload: { map, mapRef }\n      });\n\n      const businessTypes = [\n        'amusement_park',\n        'art_gallery',\n        'bar',\n        'book_store',\n        'cafe',\n        'museum',\n        'tourist_attraction'\n      ];\n      const placeLocation = new window.google.maps.LatLng(mapCenter);\n\n      businessTypes.forEach(type => {\n        let request = {\n          location: placeLocation,\n          radius: '500',\n          type: ''\n        };\n\n        request.type = type;\n\n        (function(_type) {\n          new window.google.maps.places.PlacesService(map).nearbySearch(\n            request,\n            results => {\n              dispatch({\n                type: 'PLACESLOADED',\n                payload: results\n              });\n            }\n          );\n        })(request.type);\n      });\n    },\n    onUpdateInfoWindow: iw => {\n      dispatch({\n        type: 'UPDATEINFOWINDOW',\n        payload: iw\n      });\n    },\n    onUpdatePlaceItem: (index, isFav) => {\n      dispatch({\n        type: 'UPDATEPLACEITEM',\n        payload: [index, isFav]\n      });\n    },\n    onAddToFaves: userData => {\n      dispatch({\n        type: 'ADDTOFAVES',\n        payload: userData\n      });\n    },\n    onDeleteFromFaves: idToDelete => {\n      dispatch({\n        type: 'DELETEFROMFAVES',\n        payload: idToDelete\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapBGNoLibrary);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Layout from './hoc/Layout/Layout';\nimport Faves from './containers/Faves/Faves';\nimport Auth from './containers/Auth/Auth';\nimport Register from './containers/Register/Register';\nimport Search from './components/Search/Search';\nimport MapBGNoLibrary from './components/UI/MapBGNoLibrary/MapBGNoLibrary';\nimport { firebase } from './axios';\nimport './App.css';\n\nconst App = props => {\n  const user = firebase.auth().currentUser;\n  // TODO: page refresh does not access valid/existing token in localStorage to auto-login User; for now,page refresh will clear localStorage and User will have to login again\n\n  if (!!user === false) {\n    // clear localStorage\n    // update redux store via mapDispatchToProps\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiresInDate');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('email');\n    props.onClearUserToken();\n  }\n\n  // TODO: setup custom route components to handle conditional routing (especially or authentication)\n  let routes = (\n    <Switch>\n      <Route path='/faves' component={Faves} />\n      <Route path='/auth' component={Auth} />\n      <Route path='/register' component={Register} />\n      <Route\n        path='/'\n        exact\n        render={props => (\n          <>\n            <Search />\n            <MapBGNoLibrary />\n          </>\n        )}\n      />\n      <Redirect to='/' />\n    </Switch>\n  );\n\n  return (\n    <div>\n      <Layout>{routes}</Layout>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClearUserToken: () => {\n      firebase.auth().signOut();\n      dispatch({\n        type: 'CLEARUSERTOKEN'\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport reducer from './store/reducers/reducer';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootReducer = combineReducers({\n  mapReduce: reducer\n});\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={'/neighborhood-map-touristy-things/#'}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}