{"version":3,"sources":["assets/heart-inactive-v3.svg","components/UI/MapBGNoLibrary/PlacesBG/PlacesBG.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/SideDrawer/DrawerButton/DrawerButton.module.css","assets/heart-inactive-v2.svg","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","containers/Auth/Auth.module.css","components/Search/Search.module.css","store/reducers/reducer.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/DrawerButton/DrawerButton.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/UI/Modal/Modal.js","components/UI/Backdrop/Backdrop.js","containers/Auth/Auth.js","containers/Register/Register.js","axios.js","components/Search/Search.js","components/UI/MapBGNoLibrary/PlacesBG/PlacesBG.js","components/UI/MapBGNoLibrary/MapBGNoLibrary.js","App.js","serviceWorker.js","index.js","assets/heart-active-v2.svg"],"names":["module","exports","initialState","map","mapRef","mapLoaded","mapCenter","lat","lng","mapPlaces","mapMarkers","mapTextLinks","infoWindow","searchText","searchboxClicked","reducer","state","action","type","payload","target","value","updatedMapCenter","data","results","geometry","location","tmpUpdatedMapPlaces","concat","updatedMapPlaces","filter","item","index","indexOf","isFav","Toolbar","props","className","classes","to","connect","places","mapReduce","namesArr","place","name","arr","linksList","nameArrIndex","whichHeartImg","src","heartActive","alt","onClick","e","heartClick","document","getElementsByClassName","heartInactiveV3","heartInactive","splice","key","click","DrawerButton","infowin","dispatch","onUpdateInfoWindow","iw","onUpdatePlaceItem","infowindowActive","onHeartClick","preventDefault","stopPropagation","console","log","SideDrawer","marker","window","google","maps","Marker","position","title","close","infowindow","basicInfo","image","photos","getUrl","setContent","iwHeart","open","iwListener","addListener","event","removeListener","imagesNode","querySelectorAll","forEach","img","style","width","addEventListener","buttonsNode","btn","right","imgContainersNode","cnt","overflow","overflowY","iwContainersNode","iwCnt","padding","height","boxSizing","Layout","children","Modal","content","Backdrop","show","Auth","id","placeholder","required","onChange","Register","instanceGeocode","axios","create","baseURL","center","searchClicked","onSetCenter","onSearchClicked","onCheckEntered","evt","cntr","queryParams","get","then","response","catch","error","Search","onKeyPress","useEffect","mapIcon","url","size","Size","scaledSize","icon","PlacesBG","iwPlaceName","this","onMapLoaded","placeLocation","LatLng","request","radius","PlacesService","nearbySearch","otherProps","ref","useRef","onLoad","Map","current","zoom","InfoWindow","maxWidth","onMount","script","createElement","process","headScript","getElementsByTagName","parentNode","insertBefore","removeEventListener","App","routes","path","component","exact","render","Boolean","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7b0cb15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart-inactive-v3.0e0abb7f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlacesBG\":\"PlacesBG_PlacesBG__1hTJ3\",\"iwPlaceName\":\"PlacesBG_iwPlaceName__1gJop\",\"iwHeart\":\"PlacesBG_iwHeart__1-sCM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerButton\":\"DrawerButton_DrawerButton__OU7KX\"};","module.exports = __webpack_public_path__ + \"static/media/heart-inactive-v2.0e1f1f09.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2SQmI\",\"touched\":\"Search_touched__3LI-p\"};","const initialState = {\n  map: null,\n  mapRef: null,\n  mapLoaded: false,\n  mapCenter: {\n    lat: 34.1020231,\n    lng: -118.3409712\n  },\n  mapPlaces: [],\n  mapMarkers: [],\n  mapTextLinks: [],\n  infoWindow: null,\n  searchText: \"e.g. '90004' or 'Los Angeles, CA'\",\n  searchboxClicked: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SETCENTER':\n      return {\n        ...state,\n        searchText: action.payload.target.value\n      };\n    case 'SEARCHCLICKED':\n      return {\n        ...state,\n        searchText: '',\n        searchboxClicked: true\n      };\n    case 'UPDATEMAP':\n      const updatedMapCenter = {\n        lat: action.payload.data.results[0].geometry.location.lat,\n        lng: action.payload.data.results[0].geometry.location.lng\n      };\n      return {\n        ...state,\n        mapPlaces: [],\n        mapCenter: {\n          ...state.mapCenter,\n          ...updatedMapCenter\n        }\n      };\n    case 'MAPLOADED':\n      return {\n        ...state,\n        map: action.payload.map,\n        mapRef: action.payload.mapRef\n      };\n    case 'PLACESLOADED':\n      const tmpUpdatedMapPlaces = [...state.mapPlaces].concat(action.payload);\n\n      // remove duplicates\n      const updatedMapPlaces = tmpUpdatedMapPlaces.filter(\n        (item, index) => tmpUpdatedMapPlaces.indexOf(item) === index\n      );\n      // console.log(updatedMapPlaces);\n\n      return {\n        ...state,\n        mapPlaces: updatedMapPlaces\n      };\n    case 'UPDATEINFOWINDOW':\n      return {\n        ...state,\n        infoWindow: action.payload\n      };\n    case 'UPDATEPLACEITEM':\n      // set isFav property on place item\n      state.mapPlaces[action.payload[0]].isFav = action.payload[1];\n      return {\n        ...state,\n        // spread mapPlaces to copy all place items\n        // isolate and update single place item\n        mapPlaces: [...state.mapPlaces, state.mapPlaces[action.payload[0]]]\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Toolbar.module.css';\n\nconst Toolbar = props => {\n  return (\n    <Fragment>\n      {/* <Backdrop /> */}\n      <ul className={classes.Toolbar}>\n        <li>\n          <NavLink to='/auth'>Login</NavLink>\n        </li>\n        <li>\n          <NavLink to='/register'>Register</NavLink>\n        </li>\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport classes from './DrawerButton.module.css';\nimport { connect } from 'react-redux';\nimport heartInactive from '../../../../assets/heart-inactive-v2.svg';\nimport heartInactiveV3 from '../../../../assets/heart-inactive-v3.svg';\nimport heartActive from '../../../../assets/heart-active-v2.svg';\n\nconst DrawerButton = props => {\n  const namesArr = props.places\n    .map(place => {\n      return place.name;\n    })\n    .filter((item, index, arr) => arr.indexOf(item) === index);\n\n  const linksList = props.places.map((place, index) => {\n    if (namesArr.indexOf(place.name) >= 0) {\n      const nameArrIndex = namesArr.indexOf(place.name);\n      const whichHeartImg = place.isFav ? (\n        <img\n          src={heartActive}\n          alt={`is a favorite: ${place.isFav}`}\n          onClick={e => {\n            props.heartClick(e, place, index);\n            if (!!document.getElementsByClassName('heart-img2')[0] === true) {\n              document.getElementsByClassName('heart-img2')[0].src = place.isFav\n                ? heartActive\n                : heartInactiveV3;\n            }\n            if (!!document.getElementsByClassName('heart-img')[0] === true) {\n              document.getElementsByClassName('heart-img')[0].src = place.isFav\n                ? heartActive\n                : heartInactiveV3;\n            }\n          }}\n        />\n      ) : (\n        <img\n          src={heartInactive}\n          alt={`is a favorite: ${place.isFav}`}\n          onClick={e => {\n            props.heartClick(e, place, index);\n            if (!!document.getElementsByClassName('heart-img2')[0] === true) {\n              document.getElementsByClassName('heart-img2')[0].src = place.isFav\n                ? heartActive\n                : heartInactiveV3;\n            }\n            if (!!document.getElementsByClassName('heart-img')[0] === true) {\n              document.getElementsByClassName('heart-img')[0].src = place.isFav\n                ? heartActive\n                : heartInactiveV3;\n            }\n          }}\n        />\n      );\n\n      // place.isFav = Math.random() < 0.5 ? true : false;\n      namesArr.splice(nameArrIndex, 1);\n\n      return (\n        <li key={index} onClick={e => props.click(e, place, index)}>\n          {place.name}\n          {whichHeartImg}\n        </li>\n      );\n    }\n    return false;\n  });\n\n  return <ul className={classes.DrawerButton}>{linksList}</ul>;\n};\n\nconst mapStateToProps = state => {\n  return {\n    places: state.mapReduce.mapPlaces\n  };\n};\n\nexport default connect(mapStateToProps)(DrawerButton);\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport DrawerButton from './DrawerButton/DrawerButton';\nimport classes from './SideDrawer.module.css';\n// import heartInactive from '../../../assets/heart-inactive-v2.svg';\nimport heartInactiveV3 from '../../../assets/heart-inactive-v3.svg';\nimport heartActive from '../../../assets/heart-active-v2.svg';\n\nconst SideDrawer = props => {\n  let infowindowActive = null;\n  const onNameClickHandler = (e, place, index) => {\n    console.log(e.target, index);\n    const map = props.map;\n    const marker = new window.google.maps.Marker({\n      position: {\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      },\n      // icon: mapIcon,\n      // icon: {\n      //   size: new window.google.maps.Size(20, 20)\n      // },\n      map: props.map,\n      title: place.name\n    });\n\n    if (infowindowActive) {\n      infowindowActive.close();\n    }\n\n    if (props.infowin) {\n      props.infowin.close();\n    }\n\n    const infowindow = props.infowin;\n    const basicInfo = {\n      name: place.name,\n      image: place.photos ? place.photos[0].getUrl() : null\n    };\n\n    const whichHeartImg = place.isFav ? heartActive : heartInactiveV3;\n    infowindow.setContent(\n      `<div>\n        <div>${basicInfo.name}</div>\n        <div class=\"${classes.iwHeart}\">\n          <img src=\"${whichHeartImg}\" class=\"heart-img2\">\n        </div>` +\n        (basicInfo.image !== null ? `<img src=\"${basicInfo.image}\">` : '') +\n        `</div>`\n    );\n\n    infowindow.open(map, marker);\n    infowindowActive = infowindow;\n    const iwListener = infowindow.addListener(\n      'domready',\n      function() {\n        window.google.maps.event.removeListener(iwListener);\n\n        const imagesNode = document.querySelectorAll('.gm-style-iw img');\n        const imagesArr = [...imagesNode];\n        imagesArr.forEach(img => {\n          img.style.width = '100%';\n        });\n\n        document\n          .getElementsByClassName('heart-img2')[0]\n          .addEventListener('click', e => {\n            e.preventDefault();\n            e.stopPropagation();\n            onHeartClick(e, place, index);\n            e.target.src = place.isFav ? heartActive : heartInactiveV3;\n          });\n\n        const buttonsNode = document.querySelectorAll(\n          '.gm-style-iw button[title=Close]'\n        );\n        const buttonsArr = [...buttonsNode];\n        buttonsArr.forEach(btn => {\n          // btn.style.display = 'none';\n          btn.style.right = '1px';\n        });\n\n        const imgContainersNode = document.querySelectorAll('.gm-style-iw-d');\n        const imgContainersArr = [...imgContainersNode];\n        imgContainersArr.forEach(cnt => {\n          cnt.style.overflow = 'unset';\n          cnt.style.overflowY = 'hidden';\n        });\n\n        const iwContainersNode = document.querySelectorAll('.gm-style-iw-c');\n        const iwContainersArr = [...iwContainersNode];\n        iwContainersArr.forEach(iwCnt => {\n          iwCnt.style.padding = '12px';\n          iwCnt.style.height = 'auto';\n          iwCnt.style.boxSizing = 'content-box';\n        });\n      },\n      this\n    );\n  };\n\n  const onHeartClick = (e, place, index) => {\n    // console.log(e, place, index);\n    e.preventDefault();\n    e.stopPropagation();\n\n    place.isFav = !place.isFav;\n    console.log(place.isFav);\n    props.onUpdatePlaceItem(index, place.isFav);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.SideDrawer}>\n        <DrawerButton click={onNameClickHandler} heartClick={onHeartClick} />\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    map: state.mapReduce.map,\n    places: state.mapReduce.mapPlaces,\n    infowin: state.mapReduce.infoWindow\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateInfoWindow: iw => {\n      dispatch({\n        type: 'UPDATEINFOWINDOW',\n        payload: iw\n      });\n    },\n    onUpdatePlaceItem: (index, isFav) => {\n      dispatch({\n        type: 'UPDATEPLACEITEM',\n        payload: [index, isFav]\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideDrawer);\n","import React, { Fragment } from 'react';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nconst Layout = props => {\n  return (\n    <Fragment>\n      <Toolbar />\n      <SideDrawer />\n      {props.children}\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport classes from './Modal.module.css';\n\nconst Modal = props => {\n  const content = props.children;\n\n  return (\n    <>\n      <div className={classes.Modal}>{content}</div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst Backdrop = props => {\n  // const { show = false, ...otherProps } = props;\n  return props.show ? (\n    <div className={classes.Backdrop} onClick={props.click}></div>\n  ) : null;\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Backdrop from '../../components/UI/Backdrop/Backdrop';\nimport classes from './Auth.module.css';\n\nconst Auth = props => {\n  return (\n    <>\n      <Backdrop show={true} />\n      <Modal className={classes.Auth}>\n        <div>\n          <label>\n            <input\n              type='text'\n              id='email'\n              name='email'\n              placeholder='Email'\n              value=''\n              required\n              onChange={() => {}}\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            <input\n              type='text'\n              id='password'\n              name='password'\n              placeholder='Password'\n              value=''\n              required\n              onChange={() => {}}\n            />\n          </label>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nconst Register = props => {\n  return <div>Register</div>;\n};\n\nexport default Register;\n","import axios from 'axios';\n\nexport const instanceGeocode = axios.create({\n  baseURL: 'https://maps.googleapis.com/maps/api'\n});\n\nexport const instanceFirebase = axios.create({\n  baseURL: 'https://scavenger-hunt-c-1573007989671.firebaseio.com'\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { instanceGeocode } from '../../axios';\nimport classes from './Search.module.css';\n\nconst Search = props => {\n  return (\n    <div className={classes.Search}>\n      {/* <Backdrop /> */}\n      <input\n        type='text'\n        onChange={props.onSetCenter}\n        onKeyPress={event => props.onCheckEntered(event, props.center)}\n        onClick={() => {\n          if (!props.searchClicked) {\n            props.onSearchClicked();\n          }\n        }}\n        value={props.center}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    center: state.mapReduce.searchText,\n    searchClicked: state.mapReduce.searchboxClicked\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetCenter: event => {\n      dispatch({\n        type: 'SETCENTER',\n        payload: event\n      });\n    },\n    onSearchClicked: event => {\n      dispatch({\n        type: 'SEARCHCLICKED'\n      });\n    },\n    onCheckEntered: (evt, cntr) => {\n      if (evt.key === 'Enter' || evt.key === 'ENTER') {\n        // use axios to get lat/lng of searchText, then pass as payload\n        const queryParams =\n          '/geocode/json?address=' +\n          cntr +\n          '&key=AIzaSyBSqWAWnXdkeCMI9gUZihf5WLVWQz-3UMA';\n\n        instanceGeocode\n          .get(queryParams)\n          .then(response => {\n            dispatch({\n              type: 'UPDATEMAP',\n              payload: response\n            });\n          })\n          .catch(error => {\n            dispatch({\n              type: 'UPDATEMAPFAILED'\n            });\n          });\n      }\n    }\n    // onMapLoaded: (map, mapRef) => {\n    //   dispatch({\n    //     type: 'MAPLOADED',\n    //     payload: { map, mapRef }\n    //   });\n\n    //   const businessTypes = ['art_gallery', 'book_store', 'cafe', 'museum'];\n    //   const placeLocation = new window.google.maps.LatLng({\n    //     lat: 34.1020231,\n    //     lng: -118.3409712\n    //   });\n\n    //   businessTypes.forEach(type => {\n    //     let request = {\n    //       location: placeLocation,\n    //       radius: '500',\n    //       type: ''\n    //     };\n\n    //     request.type = type;\n\n    //     (function(_type) {\n    //       new window.google.maps.places.PlacesService(map).nearbySearch(\n    //         request,\n    //         results => {\n    //           dispatch({\n    //             type: 'PLACESLOADED',\n    //             payload: results\n    //           });\n    //         }\n    //       );\n    //     })(request.type);\n    //   });\n    // }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport heartInactive from '../../../../assets/heart-inactive-v3.svg';\nimport heartActive from '../../../../assets/heart-active-v2.svg';\nimport classes from './PlacesBG.module.css';\n\nconst PlacesBG = props => {\n  let infowindowActive = null;\n  const onLoad = () => {\n    props.places.forEach((place, index) => {\n      const mapIcon = {\n        url:\n          'https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi2_hdpi.png',\n        size: new window.google.maps.Size(23, 36.8),\n        scaledSize: new window.google.maps.Size(23, 36.8)\n      };\n\n      const marker = new window.google.maps.Marker({\n        position: {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng()\n        },\n        icon: mapIcon,\n        map: props.map,\n        title: place.name\n      });\n\n      // add listener and infoWindow\n      window.google.maps.event.addListener(marker, 'click', function() {\n        // close all existing windows\n        if (infowindowActive) {\n          infowindowActive.close();\n        }\n\n        if (props.infowin) {\n          props.infowin.close();\n        }\n\n        const whichHeartImg = place.isFav ? heartActive : heartInactive;\n\n        const infowindow = props.infowin;\n        const basicInfo = {\n          name: place.name,\n          image: place.photos ? place.photos[0].getUrl() : null\n        };\n\n        infowindow.setContent(\n          `<div class=${classes.PlacesBG}>\n            <div>\n              <div class=${classes.iwPlaceName}>${basicInfo.name}</div>\n              <div class=\"${classes.iwHeart}\">\n                <img src=\"${whichHeartImg}\" class=\"heart-img\">\n              </div>\n            </div>` +\n            (basicInfo.image !== null\n              ? `<div class=\"iw-place-img\"><img src=\"${basicInfo.image}\"></div>`\n              : '') +\n            `</div>`\n        );\n        infowindow.open(props.map, marker);\n        infowindowActive = infowindow;\n        const iwListener = infowindow.addListener(\n          'domready',\n          function() {\n            window.google.maps.event.removeListener(iwListener);\n            const imagesNode = document.querySelectorAll('.gm-style-iw img');\n            const imagesArr = [...imagesNode];\n\n            imagesArr.forEach(img => {\n              img.style.width = '100%';\n            });\n\n            document\n              .getElementsByClassName('heart-img')[0]\n              .addEventListener('click', e => {\n                props.heartClick(e, place, index);\n                e.target.src = place.isFav ? heartActive : heartInactive;\n              });\n\n            const buttonsNode = document.querySelectorAll(\n              '.gm-style-iw button[title=Close]'\n            );\n            const buttonsArr = [...buttonsNode];\n            buttonsArr.forEach(btn => {\n              // btn.style.display = 'none';\n              btn.style.right = '1px';\n            });\n\n            const imgContainersNode = document.querySelectorAll(\n              '.gm-style-iw-d'\n            );\n            const imgContainersArr = [...imgContainersNode];\n            imgContainersArr.forEach(cnt => {\n              cnt.style.overflow = 'unset';\n              cnt.style.overflowY = 'hidden';\n            });\n\n            const iwContainersNode = document.querySelectorAll(\n              '.gm-style-iw-c'\n            );\n            const iwContainersArr = [...iwContainersNode];\n            iwContainersArr.forEach(iwCnt => {\n              iwCnt.style.padding = '12px';\n              iwCnt.style.height = 'auto';\n              iwCnt.style.boxSizing = 'content-box';\n            });\n          },\n          this\n        );\n      });\n    });\n  };\n\n  useEffect(() => {\n    onLoad();\n  });\n\n  return <p>Some places.</p>;\n};\n\nconst mapStateToProps = state => {\n  return {\n    map: state.mapReduce.map,\n    places: state.mapReduce.mapPlaces,\n    infowin: state.mapReduce.infoWindow\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateInfoWindow: iw => {\n      dispatch({\n        type: 'UPDATEINFOWINDOW',\n        payload: iw\n      });\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlacesBG);\n","import React, { Fragment, useEffect, useRef } from 'react';\nimport Places from './PlacesBG/PlacesBG';\nimport { connect } from 'react-redux';\n\n// const useForceUpdate = () => {\n//   const [val, setVal] = useState(0);\n//   return () => setVal(val => ++val);\n// };\n\nconst MapBGNoLibrary = props => {\n  const otherProps = { ref: useRef(), className: props.className };\n  // const forceUpdate = useForceUpdate();\n\n  const onHeartFavToggle = (e, place, index) => {\n    console.log(e, place, index);\n    e.preventDefault();\n    e.stopPropagation();\n\n    place.isFav = !place.isFav;\n    console.log(place.isFav);\n    props.onUpdatePlaceItem(index, place.isFav);\n    // forceUpdate();\n  };\n  const onLoad = () => {\n    const map = new window.google.maps.Map(otherProps.ref.current, {\n      center: props.center,\n      zoom: 17\n      // zoomControl: false\n    });\n    const infowindow = new window.google.maps.InfoWindow({\n      maxWidth: 300\n    });\n\n    props.onMount && props.onMount(map);\n    props.onMapLoaded(map, otherProps.ref, props.center);\n    props.onUpdateInfoWindow(infowindow);\n  };\n\n  useEffect(() => {\n    if (!window.google) {\n      const script = document.createElement(`script`);\n      script.type = `text/javascript`;\n      script.src = `https://maps.google.com/maps/api/js?key=${process.env.REACT_APP_GMAPS_API_KEY}&libraries=places`;\n      const headScript = document.getElementsByTagName(`script`)[0];\n      headScript.parentNode.insertBefore(script, headScript);\n      script.addEventListener(`load`, onLoad);\n      return () => script.removeEventListener(`load`, onLoad);\n    } else onLoad();\n  });\n\n  return (\n    <Fragment>\n      <div {...otherProps} style={{ height: `calc(100vh - 60px)` }} />\n      {<Places heartClick={onHeartFavToggle} />}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    center: state.mapReduce.mapCenter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onMapLoaded: (map, mapRef, mapCenter) => {\n      dispatch({\n        type: 'MAPLOADED',\n        payload: { map, mapRef }\n      });\n\n      const businessTypes = [\n        'amusement_park',\n        'art_gallery',\n        'bar',\n        'book_store',\n        'cafe',\n        'museum',\n        'tourist_attraction'\n      ];\n      const placeLocation = new window.google.maps.LatLng(mapCenter);\n\n      businessTypes.forEach(type => {\n        let request = {\n          location: placeLocation,\n          radius: '500',\n          type: ''\n        };\n\n        request.type = type;\n\n        (function(_type) {\n          new window.google.maps.places.PlacesService(map).nearbySearch(\n            request,\n            results => {\n              dispatch({\n                type: 'PLACESLOADED',\n                payload: results\n              });\n            }\n          );\n        })(request.type);\n      });\n    },\n    onUpdateInfoWindow: iw => {\n      dispatch({\n        type: 'UPDATEINFOWINDOW',\n        payload: iw\n      });\n    },\n    onUpdatePlaceItem: (index, isFav) => {\n      dispatch({\n        type: 'UPDATEPLACEITEM',\n        payload: [index, isFav]\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapBGNoLibrary);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport Auth from './containers/Auth/Auth';\nimport Register from './containers/Register/Register';\nimport Search from './components/Search/Search';\nimport MapBGNoLibrary from './components/UI/MapBGNoLibrary/MapBGNoLibrary';\nimport './App.css';\n\nconst App = props => {\n  let routes = (\n    <Switch>\n      <Route path='/auth' component={Auth} />\n      <Route path='/register' component={Register} />\n      <Route\n        path='/'\n        exact\n        render={props => (\n          <>\n            <Search />\n            <MapBGNoLibrary />\n          </>\n        )}\n      />\n      <Redirect to='/' />\n    </Switch>\n  );\n\n  return (\n    <div>\n      <Layout>{routes}</Layout>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport reducer from './store/reducers/reducer';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootReducer = combineReducers({\n  mapReduce: reducer\n});\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/heart-active-v2.be2c63a1.svg\";"],"sourceRoot":""}